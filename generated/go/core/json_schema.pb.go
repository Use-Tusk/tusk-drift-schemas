// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: core/json_schema.proto

package corev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// JSON schema type enumeration
// Language-agnostic type classification for JSON values
type JsonSchemaType int32

const (
	JsonSchemaType_JSON_SCHEMA_TYPE_UNSPECIFIED    JsonSchemaType = 0
	JsonSchemaType_JSON_SCHEMA_TYPE_NUMBER         JsonSchemaType = 1
	JsonSchemaType_JSON_SCHEMA_TYPE_STRING         JsonSchemaType = 2
	JsonSchemaType_JSON_SCHEMA_TYPE_BOOLEAN        JsonSchemaType = 3
	JsonSchemaType_JSON_SCHEMA_TYPE_NULL           JsonSchemaType = 4
	JsonSchemaType_JSON_SCHEMA_TYPE_UNDEFINED      JsonSchemaType = 5
	JsonSchemaType_JSON_SCHEMA_TYPE_OBJECT         JsonSchemaType = 6
	JsonSchemaType_JSON_SCHEMA_TYPE_ORDERED_LIST   JsonSchemaType = 7
	JsonSchemaType_JSON_SCHEMA_TYPE_UNORDERED_LIST JsonSchemaType = 8
	JsonSchemaType_JSON_SCHEMA_TYPE_FUNCTION       JsonSchemaType = 9
)

// Enum value maps for JsonSchemaType.
var (
	JsonSchemaType_name = map[int32]string{
		0: "JSON_SCHEMA_TYPE_UNSPECIFIED",
		1: "JSON_SCHEMA_TYPE_NUMBER",
		2: "JSON_SCHEMA_TYPE_STRING",
		3: "JSON_SCHEMA_TYPE_BOOLEAN",
		4: "JSON_SCHEMA_TYPE_NULL",
		5: "JSON_SCHEMA_TYPE_UNDEFINED",
		6: "JSON_SCHEMA_TYPE_OBJECT",
		7: "JSON_SCHEMA_TYPE_ORDERED_LIST",
		8: "JSON_SCHEMA_TYPE_UNORDERED_LIST",
		9: "JSON_SCHEMA_TYPE_FUNCTION",
	}
	JsonSchemaType_value = map[string]int32{
		"JSON_SCHEMA_TYPE_UNSPECIFIED":    0,
		"JSON_SCHEMA_TYPE_NUMBER":         1,
		"JSON_SCHEMA_TYPE_STRING":         2,
		"JSON_SCHEMA_TYPE_BOOLEAN":        3,
		"JSON_SCHEMA_TYPE_NULL":           4,
		"JSON_SCHEMA_TYPE_UNDEFINED":      5,
		"JSON_SCHEMA_TYPE_OBJECT":         6,
		"JSON_SCHEMA_TYPE_ORDERED_LIST":   7,
		"JSON_SCHEMA_TYPE_UNORDERED_LIST": 8,
		"JSON_SCHEMA_TYPE_FUNCTION":       9,
	}
)

func (x JsonSchemaType) Enum() *JsonSchemaType {
	p := new(JsonSchemaType)
	*p = x
	return p
}

func (x JsonSchemaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JsonSchemaType) Descriptor() protoreflect.EnumDescriptor {
	return file_core_json_schema_proto_enumTypes[0].Descriptor()
}

func (JsonSchemaType) Type() protoreflect.EnumType {
	return &file_core_json_schema_proto_enumTypes[0]
}

func (x JsonSchemaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JsonSchemaType.Descriptor instead.
func (JsonSchemaType) EnumDescriptor() ([]byte, []int) {
	return file_core_json_schema_proto_rawDescGZIP(), []int{0}
}

// Encoding type for data serialization
type EncodingType int32

const (
	EncodingType_ENCODING_TYPE_UNSPECIFIED EncodingType = 0
	EncodingType_ENCODING_TYPE_BASE64      EncodingType = 1
)

// Enum value maps for EncodingType.
var (
	EncodingType_name = map[int32]string{
		0: "ENCODING_TYPE_UNSPECIFIED",
		1: "ENCODING_TYPE_BASE64",
	}
	EncodingType_value = map[string]int32{
		"ENCODING_TYPE_UNSPECIFIED": 0,
		"ENCODING_TYPE_BASE64":      1,
	}
)

func (x EncodingType) Enum() *EncodingType {
	p := new(EncodingType)
	*p = x
	return p
}

func (x EncodingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncodingType) Descriptor() protoreflect.EnumDescriptor {
	return file_core_json_schema_proto_enumTypes[1].Descriptor()
}

func (EncodingType) Type() protoreflect.EnumType {
	return &file_core_json_schema_proto_enumTypes[1]
}

func (x EncodingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncodingType.Descriptor instead.
func (EncodingType) EnumDescriptor() ([]byte, []int) {
	return file_core_json_schema_proto_rawDescGZIP(), []int{1}
}

// Decoded content type classification
// Describes the semantic type of decoded content
type DecodedType int32

const (
	DecodedType_DECODED_TYPE_UNSPECIFIED    DecodedType = 0
	DecodedType_DECODED_TYPE_JSON           DecodedType = 1
	DecodedType_DECODED_TYPE_HTML           DecodedType = 2
	DecodedType_DECODED_TYPE_CSS            DecodedType = 3
	DecodedType_DECODED_TYPE_JAVASCRIPT     DecodedType = 4
	DecodedType_DECODED_TYPE_XML            DecodedType = 5
	DecodedType_DECODED_TYPE_YAML           DecodedType = 6
	DecodedType_DECODED_TYPE_MARKDOWN       DecodedType = 7
	DecodedType_DECODED_TYPE_CSV            DecodedType = 8
	DecodedType_DECODED_TYPE_SQL            DecodedType = 9
	DecodedType_DECODED_TYPE_GRAPHQL        DecodedType = 10
	DecodedType_DECODED_TYPE_PLAIN_TEXT     DecodedType = 11
	DecodedType_DECODED_TYPE_FORM_DATA      DecodedType = 12
	DecodedType_DECODED_TYPE_MULTIPART_FORM DecodedType = 13
	DecodedType_DECODED_TYPE_PDF            DecodedType = 14
	DecodedType_DECODED_TYPE_AUDIO          DecodedType = 15
	DecodedType_DECODED_TYPE_VIDEO          DecodedType = 16
	DecodedType_DECODED_TYPE_GZIP           DecodedType = 17
	DecodedType_DECODED_TYPE_BINARY         DecodedType = 18
	DecodedType_DECODED_TYPE_JPEG           DecodedType = 19
	DecodedType_DECODED_TYPE_PNG            DecodedType = 20
	DecodedType_DECODED_TYPE_GIF            DecodedType = 21
	DecodedType_DECODED_TYPE_WEBP           DecodedType = 22
	DecodedType_DECODED_TYPE_SVG            DecodedType = 23
	DecodedType_DECODED_TYPE_ZIP            DecodedType = 24
)

// Enum value maps for DecodedType.
var (
	DecodedType_name = map[int32]string{
		0:  "DECODED_TYPE_UNSPECIFIED",
		1:  "DECODED_TYPE_JSON",
		2:  "DECODED_TYPE_HTML",
		3:  "DECODED_TYPE_CSS",
		4:  "DECODED_TYPE_JAVASCRIPT",
		5:  "DECODED_TYPE_XML",
		6:  "DECODED_TYPE_YAML",
		7:  "DECODED_TYPE_MARKDOWN",
		8:  "DECODED_TYPE_CSV",
		9:  "DECODED_TYPE_SQL",
		10: "DECODED_TYPE_GRAPHQL",
		11: "DECODED_TYPE_PLAIN_TEXT",
		12: "DECODED_TYPE_FORM_DATA",
		13: "DECODED_TYPE_MULTIPART_FORM",
		14: "DECODED_TYPE_PDF",
		15: "DECODED_TYPE_AUDIO",
		16: "DECODED_TYPE_VIDEO",
		17: "DECODED_TYPE_GZIP",
		18: "DECODED_TYPE_BINARY",
		19: "DECODED_TYPE_JPEG",
		20: "DECODED_TYPE_PNG",
		21: "DECODED_TYPE_GIF",
		22: "DECODED_TYPE_WEBP",
		23: "DECODED_TYPE_SVG",
		24: "DECODED_TYPE_ZIP",
	}
	DecodedType_value = map[string]int32{
		"DECODED_TYPE_UNSPECIFIED":    0,
		"DECODED_TYPE_JSON":           1,
		"DECODED_TYPE_HTML":           2,
		"DECODED_TYPE_CSS":            3,
		"DECODED_TYPE_JAVASCRIPT":     4,
		"DECODED_TYPE_XML":            5,
		"DECODED_TYPE_YAML":           6,
		"DECODED_TYPE_MARKDOWN":       7,
		"DECODED_TYPE_CSV":            8,
		"DECODED_TYPE_SQL":            9,
		"DECODED_TYPE_GRAPHQL":        10,
		"DECODED_TYPE_PLAIN_TEXT":     11,
		"DECODED_TYPE_FORM_DATA":      12,
		"DECODED_TYPE_MULTIPART_FORM": 13,
		"DECODED_TYPE_PDF":            14,
		"DECODED_TYPE_AUDIO":          15,
		"DECODED_TYPE_VIDEO":          16,
		"DECODED_TYPE_GZIP":           17,
		"DECODED_TYPE_BINARY":         18,
		"DECODED_TYPE_JPEG":           19,
		"DECODED_TYPE_PNG":            20,
		"DECODED_TYPE_GIF":            21,
		"DECODED_TYPE_WEBP":           22,
		"DECODED_TYPE_SVG":            23,
		"DECODED_TYPE_ZIP":            24,
	}
)

func (x DecodedType) Enum() *DecodedType {
	p := new(DecodedType)
	*p = x
	return p
}

func (x DecodedType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DecodedType) Descriptor() protoreflect.EnumDescriptor {
	return file_core_json_schema_proto_enumTypes[2].Descriptor()
}

func (DecodedType) Type() protoreflect.EnumType {
	return &file_core_json_schema_proto_enumTypes[2]
}

func (x DecodedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DecodedType.Descriptor instead.
func (DecodedType) EnumDescriptor() ([]byte, []int) {
	return file_core_json_schema_proto_rawDescGZIP(), []int{2}
}

// Recursive JSON schema message
// Describes the structure and metadata of JSON data
type JsonSchema struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of this schema node
	Type JsonSchemaType `protobuf:"varint,1,opt,name=type,proto3,enum=tusk.drift.core.v1.JsonSchemaType" json:"type,omitempty"`
	// For OBJECT types: map of property names to their schemas
	Properties map[string]*JsonSchema `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// For ORDERED_LIST/UNORDERED_LIST types: schema of list items
	Items *JsonSchema `protobuf:"bytes,3,opt,name=items,proto3,oneof" json:"items,omitempty"`
	// Optional encoding information (e.g., BASE64)
	Encoding *EncodingType `protobuf:"varint,4,opt,name=encoding,proto3,enum=tusk.drift.core.v1.EncodingType,oneof" json:"encoding,omitempty"`
	// Optional decoded content type (e.g., JSON, HTML)
	DecodedType *DecodedType `protobuf:"varint,5,opt,name=decoded_type,json=decodedType,proto3,enum=tusk.drift.core.v1.DecodedType,oneof" json:"decoded_type,omitempty"`
	// Match importance for test matching (0.0 to 1.0)
	// 0.0 = lowest importance, 1.0 = highest importance
	MatchImportance *float64 `protobuf:"fixed64,6,opt,name=match_importance,json=matchImportance,proto3,oneof" json:"match_importance,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JsonSchema) Reset() {
	*x = JsonSchema{}
	mi := &file_core_json_schema_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonSchema) ProtoMessage() {}

func (x *JsonSchema) ProtoReflect() protoreflect.Message {
	mi := &file_core_json_schema_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonSchema.ProtoReflect.Descriptor instead.
func (*JsonSchema) Descriptor() ([]byte, []int) {
	return file_core_json_schema_proto_rawDescGZIP(), []int{0}
}

func (x *JsonSchema) GetType() JsonSchemaType {
	if x != nil {
		return x.Type
	}
	return JsonSchemaType_JSON_SCHEMA_TYPE_UNSPECIFIED
}

func (x *JsonSchema) GetProperties() map[string]*JsonSchema {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *JsonSchema) GetItems() *JsonSchema {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *JsonSchema) GetEncoding() EncodingType {
	if x != nil && x.Encoding != nil {
		return *x.Encoding
	}
	return EncodingType_ENCODING_TYPE_UNSPECIFIED
}

func (x *JsonSchema) GetDecodedType() DecodedType {
	if x != nil && x.DecodedType != nil {
		return *x.DecodedType
	}
	return DecodedType_DECODED_TYPE_UNSPECIFIED
}

func (x *JsonSchema) GetMatchImportance() float64 {
	if x != nil && x.MatchImportance != nil {
		return *x.MatchImportance
	}
	return 0
}

var File_core_json_schema_proto protoreflect.FileDescriptor

const file_core_json_schema_proto_rawDesc = "" +
	"\n" +
	"\x16core/json_schema.proto\x12\x12tusk.drift.core.v1\"\xa7\x04\n" +
	"\n" +
	"JsonSchema\x126\n" +
	"\x04type\x18\x01 \x01(\x0e2\".tusk.drift.core.v1.JsonSchemaTypeR\x04type\x12N\n" +
	"\n" +
	"properties\x18\x02 \x03(\v2..tusk.drift.core.v1.JsonSchema.PropertiesEntryR\n" +
	"properties\x129\n" +
	"\x05items\x18\x03 \x01(\v2\x1e.tusk.drift.core.v1.JsonSchemaH\x00R\x05items\x88\x01\x01\x12A\n" +
	"\bencoding\x18\x04 \x01(\x0e2 .tusk.drift.core.v1.EncodingTypeH\x01R\bencoding\x88\x01\x01\x12G\n" +
	"\fdecoded_type\x18\x05 \x01(\x0e2\x1f.tusk.drift.core.v1.DecodedTypeH\x02R\vdecodedType\x88\x01\x01\x12.\n" +
	"\x10match_importance\x18\x06 \x01(\x01H\x03R\x0fmatchImportance\x88\x01\x01\x1a]\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.tusk.drift.core.v1.JsonSchemaR\x05value:\x028\x01B\b\n" +
	"\x06_itemsB\v\n" +
	"\t_encodingB\x0f\n" +
	"\r_decoded_typeB\x13\n" +
	"\x11_match_importance*\xc9\x02\n" +
	"\x0eJsonSchemaType\x12 \n" +
	"\x1cJSON_SCHEMA_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17JSON_SCHEMA_TYPE_NUMBER\x10\x01\x12\x1b\n" +
	"\x17JSON_SCHEMA_TYPE_STRING\x10\x02\x12\x1c\n" +
	"\x18JSON_SCHEMA_TYPE_BOOLEAN\x10\x03\x12\x19\n" +
	"\x15JSON_SCHEMA_TYPE_NULL\x10\x04\x12\x1e\n" +
	"\x1aJSON_SCHEMA_TYPE_UNDEFINED\x10\x05\x12\x1b\n" +
	"\x17JSON_SCHEMA_TYPE_OBJECT\x10\x06\x12!\n" +
	"\x1dJSON_SCHEMA_TYPE_ORDERED_LIST\x10\a\x12#\n" +
	"\x1fJSON_SCHEMA_TYPE_UNORDERED_LIST\x10\b\x12\x1d\n" +
	"\x19JSON_SCHEMA_TYPE_FUNCTION\x10\t*G\n" +
	"\fEncodingType\x12\x1d\n" +
	"\x19ENCODING_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14ENCODING_TYPE_BASE64\x10\x01*\xf0\x04\n" +
	"\vDecodedType\x12\x1c\n" +
	"\x18DECODED_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11DECODED_TYPE_JSON\x10\x01\x12\x15\n" +
	"\x11DECODED_TYPE_HTML\x10\x02\x12\x14\n" +
	"\x10DECODED_TYPE_CSS\x10\x03\x12\x1b\n" +
	"\x17DECODED_TYPE_JAVASCRIPT\x10\x04\x12\x14\n" +
	"\x10DECODED_TYPE_XML\x10\x05\x12\x15\n" +
	"\x11DECODED_TYPE_YAML\x10\x06\x12\x19\n" +
	"\x15DECODED_TYPE_MARKDOWN\x10\a\x12\x14\n" +
	"\x10DECODED_TYPE_CSV\x10\b\x12\x14\n" +
	"\x10DECODED_TYPE_SQL\x10\t\x12\x18\n" +
	"\x14DECODED_TYPE_GRAPHQL\x10\n" +
	"\x12\x1b\n" +
	"\x17DECODED_TYPE_PLAIN_TEXT\x10\v\x12\x1a\n" +
	"\x16DECODED_TYPE_FORM_DATA\x10\f\x12\x1f\n" +
	"\x1bDECODED_TYPE_MULTIPART_FORM\x10\r\x12\x14\n" +
	"\x10DECODED_TYPE_PDF\x10\x0e\x12\x16\n" +
	"\x12DECODED_TYPE_AUDIO\x10\x0f\x12\x16\n" +
	"\x12DECODED_TYPE_VIDEO\x10\x10\x12\x15\n" +
	"\x11DECODED_TYPE_GZIP\x10\x11\x12\x17\n" +
	"\x13DECODED_TYPE_BINARY\x10\x12\x12\x15\n" +
	"\x11DECODED_TYPE_JPEG\x10\x13\x12\x14\n" +
	"\x10DECODED_TYPE_PNG\x10\x14\x12\x14\n" +
	"\x10DECODED_TYPE_GIF\x10\x15\x12\x15\n" +
	"\x11DECODED_TYPE_WEBP\x10\x16\x12\x14\n" +
	"\x10DECODED_TYPE_SVG\x10\x17\x12\x14\n" +
	"\x10DECODED_TYPE_ZIP\x10\x18B\xd5\x01\n" +
	"\x16com.tusk.drift.core.v1B\x0fJsonSchemaProtoP\x01Z?github.com/Use-Tusk/tusk-drift-schemas/generated/go/core;corev1\xa2\x02\x03TDC\xaa\x02\x12Tusk.Drift.Core.V1\xca\x02\x12Tusk\\Drift\\Core\\V1\xe2\x02\x1eTusk\\Drift\\Core\\V1\\GPBMetadata\xea\x02\x15Tusk::Drift::Core::V1b\x06proto3"

var (
	file_core_json_schema_proto_rawDescOnce sync.Once
	file_core_json_schema_proto_rawDescData []byte
)

func file_core_json_schema_proto_rawDescGZIP() []byte {
	file_core_json_schema_proto_rawDescOnce.Do(func() {
		file_core_json_schema_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_json_schema_proto_rawDesc), len(file_core_json_schema_proto_rawDesc)))
	})
	return file_core_json_schema_proto_rawDescData
}

var file_core_json_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_core_json_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_core_json_schema_proto_goTypes = []any{
	(JsonSchemaType)(0), // 0: tusk.drift.core.v1.JsonSchemaType
	(EncodingType)(0),   // 1: tusk.drift.core.v1.EncodingType
	(DecodedType)(0),    // 2: tusk.drift.core.v1.DecodedType
	(*JsonSchema)(nil),  // 3: tusk.drift.core.v1.JsonSchema
	nil,                 // 4: tusk.drift.core.v1.JsonSchema.PropertiesEntry
}
var file_core_json_schema_proto_depIdxs = []int32{
	0, // 0: tusk.drift.core.v1.JsonSchema.type:type_name -> tusk.drift.core.v1.JsonSchemaType
	4, // 1: tusk.drift.core.v1.JsonSchema.properties:type_name -> tusk.drift.core.v1.JsonSchema.PropertiesEntry
	3, // 2: tusk.drift.core.v1.JsonSchema.items:type_name -> tusk.drift.core.v1.JsonSchema
	1, // 3: tusk.drift.core.v1.JsonSchema.encoding:type_name -> tusk.drift.core.v1.EncodingType
	2, // 4: tusk.drift.core.v1.JsonSchema.decoded_type:type_name -> tusk.drift.core.v1.DecodedType
	3, // 5: tusk.drift.core.v1.JsonSchema.PropertiesEntry.value:type_name -> tusk.drift.core.v1.JsonSchema
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_core_json_schema_proto_init() }
func file_core_json_schema_proto_init() {
	if File_core_json_schema_proto != nil {
		return
	}
	file_core_json_schema_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_json_schema_proto_rawDesc), len(file_core_json_schema_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_json_schema_proto_goTypes,
		DependencyIndexes: file_core_json_schema_proto_depIdxs,
		EnumInfos:         file_core_json_schema_proto_enumTypes,
		MessageInfos:      file_core_json_schema_proto_msgTypes,
	}.Build()
	File_core_json_schema_proto = out.File
	file_core_json_schema_proto_goTypes = nil
	file_core_json_schema_proto_depIdxs = nil
}
